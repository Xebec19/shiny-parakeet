{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a Go application having JWT authentication, Unit tests,etc using postgresql as database",
        "title": "assignment",
        "contact": {
            "name": "Rohan Kumar Thakur",
            "email": "rohandeveloper106@gmail.com"
        },
        "license": {
            "name": "GNU GENERAL PUBLIC LICENSE"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/v1/account/create": {
            "post": {
                "summary": "Fetch a set of accounts created by the user",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accounts.createAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseParams"
                        }
                    }
                }
            }
        },
        "/v1/account/delete": {
            "delete": {
                "summary": "deletes an account using account id",
                "parameters": [
                    {
                        "type": "string",
                        "name": "accountId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseParams"
                        }
                    }
                }
            }
        },
        "/v1/account/read": {
            "get": {
                "summary": "Fetch an account data using its account id and user's id and return it",
                "parameters": [
                    {
                        "type": "string",
                        "name": "accountId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseParams"
                        }
                    }
                }
            }
        },
        "/v1/account/update": {
            "post": {
                "summary": "receives updated account details and update it in database using given account id and user id",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accounts.readManyAccountsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseParams"
                        }
                    }
                }
            }
        },
        "/v1/auth/login": {
            "post": {
                "summary": "login takes email and password, and generates a jwt token if credentials are correct",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.loginRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseParams"
                        }
                    }
                }
            }
        },
        "/v1/auth/register": {
            "post": {
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.registerRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseParams"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "accounts.createAccountRequest": {
            "type": "object",
            "required": [
                "accountName",
                "dob"
            ],
            "properties": {
                "accountName": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dob": {
                    "type": "string"
                }
            }
        },
        "accounts.readManyAccountsRequest": {
            "type": "object",
            "required": [
                "limit",
                "page"
            ],
            "properties": {
                "limit": {
                    "type": "string"
                },
                "page": {
                    "type": "string"
                }
            }
        },
        "auth.loginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "auth.registerRequest": {
            "type": "object",
            "required": [
                "email",
                "firstName",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "util.ResponseParams": {
            "type": "object",
            "properties": {
                "data": {},
                "status": {
                    "type": "boolean"
                }
            }
        }
    }
}