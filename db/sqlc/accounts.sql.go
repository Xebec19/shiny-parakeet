// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: accounts.sql

package db

import (
	"context"
	"database/sql"
	"time"

	"github.com/google/uuid"
)

const createAccount = `-- name: CreateAccount :one
INSERT INTO ACCOUNTS (ACCOUNT_NAME, DOB, ADDRESS, DESCRIPTION, CREATED_BY) VALUES ($1,$2,$3,$4,$5) RETURNING ACCOUNT_ID
`

type CreateAccountParams struct {
	AccountName string         `json:"account_name"`
	Dob         time.Time      `json:"dob"`
	Address     sql.NullString `json:"address"`
	Description sql.NullString `json:"description"`
	CreatedBy   uuid.UUID      `json:"created_by"`
}

func (q *Queries) CreateAccount(ctx context.Context, arg CreateAccountParams) (uuid.UUID, error) {
	row := q.db.QueryRowContext(ctx, createAccount,
		arg.AccountName,
		arg.Dob,
		arg.Address,
		arg.Description,
		arg.CreatedBy,
	)
	var account_id uuid.UUID
	err := row.Scan(&account_id)
	return account_id, err
}
